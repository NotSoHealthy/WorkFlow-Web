<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Postuler pour un emploi</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"/>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.css"/>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet"/>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"/>

  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f4f7fa;
      color: #333;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      margin: 0;
    }
    .form-section {
      padding: 40px;
      background: linear-gradient(to bottom, #f9f9f9, #ffffff);
      border-radius: 15px;
      box-shadow: 0 5px 15px rgba(0,0,0,0.1);
      margin: 20px;
      max-width: 800px;
      width: 100%;
    }
    .progress {
      height: 8px;
      border-radius: 4px;
      margin-bottom: 30px;
      background-color: #e9ecef;
    }
    .progress-bar {
      background: linear-gradient(to right, #007bff, #00c6ff);
    }
    .form-steps-container {
      position: relative;
      min-height: 500px;
    }
    .form-step {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      transition: opacity 0.5s ease;
      background: #fff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    .form-step.hidden {
      opacity: 0;
      pointer-events: none;
    }
    .form-step.visible {
      opacity: 1;
      pointer-events: auto;
    }
    .form-step h3 {
      font-size: 1.2rem;
      font-weight: 600;
      color: #007bff;
      margin-bottom: 20px;
      padding-bottom: 10px;
      border-bottom: 2px solid #007bff;
    }
    .form-control {
      border: none;
      border-bottom: 2px solid #ccc;
      border-radius: 0;
      box-shadow: none;
      transition: border-color 0.3s ease;
      padding-left: 35px;
    }
    .form-control:focus {
      border-color: #007bff;
      outline: none;
    }
    .form-group {
      position: relative;
      margin-bottom: 25px;
    }
    .form-group label {
      font-size: 0.9rem;
      font-weight: 600;
      color: #555;
      margin-bottom: 5px;
    }
    .form-group i {
      position: absolute;
      top: 40px;
      left: 10px;
      color: #007bff;
    }
    .btn-primary {
      background: linear-gradient(to right, #007bff, #00c6ff);
      border: none;
      padding: 10px 20px;
      box-shadow: 0 4px 15px rgba(0,0,0,0.2);
      transition: all 0.3s ease;
    }
    .btn-primary:hover {
      transform: scale(1.05);
      background: linear-gradient(to right, #0056b3, #0096c7);
    }
    .btn-secondary {
      margin-right: 10px;
      background-color: #6c757d;
      border: none;
      padding: 10px 20px;
      box-shadow: 0 4px 15px rgba(0,0,0,0.2);
      transition: all 0.3s ease;
    }
    .btn-secondary:hover {
      transform: scale(1.05);
      background-color: #5a6268;
    }
    h2 {
      font-weight: 700;
      color: #222;
    }
    .error-message {
      color: red;
      font-size: 0.8rem;
      margin-top: 5px;
      display: block;
    }
    .invalid-field {
      border-color: red;
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="row">
      <div class="col-md-8 offset-md-2">
        <div class="form-section" data-aos="fade-up">
          <h2 class="text-center mb-4">Candidature</h2>
          {% if jobOfferId is defined %}
            <h3>Postuler pour l'offre d'emploi : {{ joboffer.title }}</h3>
          {% endif %}

          <!-- Progress Bar -->
          <div class="progress">
            <div class="progress-bar" role="progressbar" style="width: 50%;" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
          </div>

          {{ form_start(form, {'attr': {'id': 'applicationForm'}}) }}

          <div id="formStepsContainer" class="form-steps-container">
            <!-- Step 1 -->
            <div id="step1" class="form-step visible">
              <h3>Étape 1 : Informations Personnelles</h3>
              <div class="form-group">
                <i class="fas fa-user"></i>
                {{ form_label(form.firstName, 'Prénom') }}
                {{ form_widget(form.firstName, {'attr': {'class': 'form-control'}}) }}
                <span class="error-message" id="error-firstName"></span>
                {{ form_errors(form.firstName) }}
              </div>
              <div class="form-group">
                <i class="fas fa-user"></i>
                {{ form_label(form.lastName, 'Nom') }}
                {{ form_widget(form.lastName, {'attr': {'class': 'form-control'}}) }}
                <span class="error-message" id="error-lastName"></span>
                {{ form_errors(form.lastName) }}
              </div>
              <div class="form-group">
                <i class="fas fa-envelope"></i>
                {{ form_label(form.mail, 'Mail') }}
                {{ form_widget(form.mail, {'attr': {'class': 'form-control'}}) }}
                <span class="error-message" id="error-mail"></span>
                {{ form_errors(form.mail) }}
              </div>
              <div class="text-right mt-3">
                <button type="button" class="btn btn-primary btn-next" id="nextBtn" disabled>Suivant</button>
              </div>
            </div>

            <!-- Step 2 -->
            <div id="step2" class="form-step hidden">
              <h3>Étape 2 : Détails de la candidature</h3>
              <div class="form-group">
                <i class="fas fa-briefcase"></i>
                {{ form_label(form.jobOffer, "Offre d'emploi") }}
                {{ form_widget(form.jobOffer, {'attr': {'class': 'form-control'}}) }}
                <span class="error-message" id="error-jobOffer"></span>
                {{ form_errors(form.jobOffer) }}
              </div>
              <div class="form-group">
                <i class="fas fa-file-alt"></i>
                {{ form_label(form.CV, 'CV') }}
                {{ form_widget(form.CV, {'attr': {'class': 'form-control'}}) }}
                <span class="error-message" id="error-CV"></span>
                {{ form_errors(form.CV) }}
              </div>
              <div class="form-group">
                <i class="fas fa-file-alt"></i>
                {{ form_label(form.Cover_Letter, 'Lettre de motivation') }}
                {{ form_widget(form.Cover_Letter, {'attr': {'class': 'form-control'}}) }}
                <span class="error-message" id="error-Cover_Letter"></span>
                {{ form_errors(form.Cover_Letter) }}
              </div>
              <div class="text-right mt-3">
                <button type="button" class="btn btn-secondary btn-prev" onclick="prevTab()">Précédent</button>
                <button type="submit" class="btn btn-primary" id="submitBtn" disabled>Envoyer la candidature</button>
              </div>
            </div>
          </div>

          {{ form_end(form) }}
        </div>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.js"></script>
  <script>
    AOS.init({ duration: 1000, once: true });

    document.addEventListener('DOMContentLoaded', function() {
      const step1 = document.getElementById('step1');
      const container = document.getElementById('formStepsContainer');
      container.style.height = step1.offsetHeight + 'px';
      validateStep1(); // Initial validation for Step 1
      validateStep2(); // Initial validation for Step 2
    });

    // Validation Functions
    function validateText(input, minLength, errorElement) {
      if (input.value.trim() === '') {
        errorElement.textContent = 'Ce champ est requis.';
        input.classList.add('invalid-field');
        return false;
      } else if (input.value.trim().length < minLength) {
        errorElement.textContent = `Ce champ doit contenir au moins ${minLength} caractères.`;
        input.classList.add('invalid-field');
        return false;
      } else {
        errorElement.textContent = '';
        input.classList.remove('invalid-field');
        return true;
      }
    }

    function validateEmail(input, errorElement) {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (input.value.trim() === '') {
        errorElement.textContent = 'Ce champ est requis.';
        input.classList.add('invalid-field');
        return false;
      } else if (!emailRegex.test(input.value.trim())) {
        errorElement.textContent = 'Veuillez entrer une adresse email valide.';
        input.classList.add('invalid-field');
        return false;
      } else {
        errorElement.textContent = '';
        input.classList.remove('invalid-field');
        return true;
      }
    }

    function validateSelect(select, errorElement) {
      if (select.value === '') {
        errorElement.textContent = 'Veuillez sélectionner une option.';
        select.classList.add('invalid-field');
        return false;
      } else {
        errorElement.textContent = '';
        select.classList.remove('invalid-field');
        return true;
      }
    }

    function validateFile(input, errorElement, required = true) {
      if (required && input.files.length === 0) {
        errorElement.textContent = 'Ce champ est requis.';
        input.classList.add('invalid-field');
        return false;
      } else {
        errorElement.textContent = '';
        input.classList.remove('invalid-field');
        return true;
      }
    }

    // Validate Step 1
    function validateStep1() {
      const firstName = document.querySelector('[name="application[firstName]"]');
      const lastName = document.querySelector('[name="application[lastName]"]');
      const mail = document.querySelector('[name="application[mail]"]');
      const errorFirstName = document.getElementById('error-firstName');
      const errorLastName = document.getElementById('error-lastName');
      const errorMail = document.getElementById('error-mail');
      const nextBtn = document.getElementById('nextBtn');

      const isFirstNameValid = validateText(firstName, 2, errorFirstName);
      const isLastNameValid = validateText(lastName, 2, errorLastName);
      const isMailValid = validateEmail(mail, errorMail);

      nextBtn.disabled = !(isFirstNameValid && isLastNameValid && isMailValid);
    }

    // Validate Step 2
    function validateStep2() {
      const jobOffer = document.querySelector('[name="application[jobOffer]"]');
      const CV = document.querySelector('[name="application[CV]"]');
      const Cover_Letter = document.querySelector('[name="application[Cover_Letter]"]');
      const errorJobOffer = document.getElementById('error-jobOffer');
      const errorCV = document.getElementById('error-CV');
      const errorCover_Letter = document.getElementById('error-Cover_Letter');
      const submitBtn = document.getElementById('submitBtn');

      const isJobOfferValid = validateSelect(jobOffer, errorJobOffer);
      const isCVValid = validateFile(CV, errorCV);
      const isCoverLetterValid = validateFile(Cover_Letter, errorCover_Letter, false); // Optional

      submitBtn.disabled = !(isJobOfferValid && isCVValid);
    }

    // Real-Time Validation Event Listeners
    document.querySelector('[name="application[firstName]"]').addEventListener('input', validateStep1);
    document.querySelector('[name="application[lastName]"]').addEventListener('input', validateStep1);
    document.querySelector('[name="application[mail]"]').addEventListener('input', validateStep1);
    document.querySelector('[name="application[jobOffer]"]').addEventListener('change', validateStep2);
    document.querySelector('[name="application[CV]"]').addEventListener('change', validateStep2);
    document.querySelector('[name="application[Cover_Letter]"]').addEventListener('change', validateStep2);

    // Navigation Functions
    function nextTab() {
      const step1 = document.getElementById('step1');
      const step2 = document.getElementById('step2');
      const container = document.getElementById('formStepsContainer');
      step1.classList.remove('visible');
      step1.classList.add('hidden');
      step2.classList.remove('hidden');
      step2.classList.add('visible');
      container.style.height = step2.offsetHeight + 'px';
      const progressBar = document.querySelector('.progress-bar');
      progressBar.style.width = '100%';
      progressBar.setAttribute('aria-valuenow', '100');
    }

    function prevTab() {
      const step1 = document.getElementById('step1');
      const step2 = document.getElementById('step2');
      const container = document.getElementById('formStepsContainer');
      step2.classList.remove('visible');
      step2.classList.add('hidden');
      step1.classList.remove('hidden');
      step1.classList.add('visible');
      container.style.height = step1.offsetHeight + 'px';
      const progressBar = document.querySelector('.progress-bar');
      progressBar.style.width = '50%';
      progressBar.setAttribute('aria-valuenow', '50');
    }

    // Attach nextTab to the Next button
    document.getElementById('nextBtn').addEventListener('click', nextTab);
  </script>
</body>
</html>