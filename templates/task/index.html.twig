{% extends 'layout.html.twig' %}

{% block title %}üìÇ Projets de Mon D√©partement{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
.project-wrapper { padding: 3rem; }
.project-box { background: white; border-radius: 1.2rem; padding: 2rem; box-shadow: 0 4px 20px rgba(0,0,0,0.06); margin-bottom: 2rem; cursor: pointer; transition: 0.2s; }
.project-box:hover { transform: translateY(-5px); box-shadow: 0 8px 30px rgba(0,0,0,0.15); }
.section-title { font-size: 2rem; font-weight: 800; text-align: center; margin-bottom: 2.5rem; color: #1e293b; }
.task-card { background: white; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); padding: 1rem; margin-bottom: 1rem; }
.task-title { font-weight: bold; font-size: 1.1rem; }
.task-description { font-size: 0.9rem; color: #666; margin-top: 5px; }
</style>
{% endblock %}

{% block main %}
<main>
<div class="project-wrapper">
    <h2 class="section-title">üìÇ Projets de Mon D√©partement</h2>
    {% for project in projects %}
        <div onclick="openTaskModal({{ project.id }}, '{{ project.Name|e('js') }}')" class="project-box">
            <h2>{{ project.Name }}</h2>
        </div>
    {% else %}
        <div class="alert alert-warning text-center">Aucun projet trouv√©.</div>
    {% endfor %}
</div>

<div id="modal-background" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; backdrop-filter:blur(5px); background:rgba(0,0,0,0.2); z-index:1040;"></div>
<div id="task-modal" style="display:none; position:fixed; top:50%; left:50%; transform:translate(-50%,-50%); background:white; padding:2rem; border-radius:10px; width:90%; max-width:1100px; height:90%; overflow:auto; z-index:1050;">
    <div class="d-flex justify-content-between mb-4">
        <h2 id="modal-project-title"></h2>
        <div>
            <button class="btn btn-success me-2" onclick="showAddTaskForm()">‚ûï Ajouter T√¢che</button>
            <button onclick="closeTaskModal()" class="btn btn-danger">Fermer ‚ùå</button>
        </div>
    </div>
    <div id="add-task-form" style="display:none; margin-bottom:2rem;">
        <input id="task-title-input" class="form-control mb-2" placeholder="Titre">
        <textarea id="task-description-input" class="form-control mb-2" placeholder="Description"></textarea>
        <select id="task-priority-input" class="form-select mb-2">
            <option>Haute</option><option>Moyenne</option><option>Basse</option>
        </select>
        <select id="task-status-input" class="form-select mb-2">
            <option>To Do</option><option>In Progress</option><option>Completed</option><option>Blocked</option>
        </select>
        <button onclick="addTask()" class="btn btn-primary">Enregistrer</button>
    </div>
    <div id="task-board" class="row"></div>
</div>
</main>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
<script>
let currentProjectId = null;

function openTaskModal(projectId, projectName) {
    currentProjectId = projectId;
    document.getElementById('modal-background').style.display = 'block';
    document.getElementById('task-modal').style.display = 'block';
    document.getElementById('modal-project-title').textContent = "üìã " + projectName;
    loadTasks(projectId);
}

function closeTaskModal() {
    document.getElementById('modal-background').style.display = 'none';
    document.getElementById('task-modal').style.display = 'none';
    document.getElementById('add-task-form').style.display = 'none';
}

function loadTasks(projectId) {
    fetch('/project/' + projectId + '/tasks/json')
        .then(response => response.json())
        .then(data => {
            const board = document.getElementById('task-board');
            board.innerHTML = '';
            const statuses = {'To Do': 'A faire','In Progress': 'En cours','Completed': 'Termin√©','Blocked': 'Bloqu√©'};
            for (const [key, label] of Object.entries(statuses)) {
                const col = document.createElement('div');
                col.className = 'col-md-3';
                col.innerHTML = `<div class="card"><div class="card-header text-center bg-primary text-white font-weight-bold">${label}</div><div class="card-body task-column" id="column-${key.replace(' ', '-')}"></div></div>`;
                board.appendChild(col);
            }
            data.forEach(task => {
                const taskDiv = document.createElement('div');
                taskDiv.className = 'task-card';
                taskDiv.innerHTML = `<div class="task-title">${task.title}</div><div class="task-description">${task.description ? task.description.slice(0,50) : ''}</div>`;
                const colBody = document.getElementById('column-' + task.status.replace(' ', '-'));
                if (colBody) colBody.appendChild(taskDiv);
            });
            document.querySelectorAll('.task-column').forEach(function(column) {
                new Sortable(column, {group:'tasks',animation:150});
            });
        });
}

function showAddTaskForm() {
    document.getElementById('add-task-form').style.display = 'block';
}

function addTask() {
    const title = document.getElementById('task-title-input').value;
    const description = document.getElementById('task-description-input').value;
    const priority = document.getElementById('task-priority-input').value;
    const status = document.getElementById('task-status-input').value;

    fetch('/task/create/json', {
        method: 'POST',
        headers: {'Content-Type': 'application/json', 'X-Requested-With': 'XMLHttpRequest'},
        body: JSON.stringify({projectId: currentProjectId, title, description, priority, status})
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            loadTasks(currentProjectId);
            document.getElementById('add-task-form').style.display = 'none';
        }
    })
    .catch(err => console.error('Erreur cr√©ation:', err));
}
</script>
{% endblock %}
